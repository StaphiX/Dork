{"map":"{\"version\":3,\"sources\":[\"webpack/bootstrap\",\"C:/Users/danmc/Documents/GitHub/Dork/server/server.tsx\",\"external \\\"express\\\"\",\"external \\\"http\\\"\",\"external \\\"socket.io\\\"\",\"C:/Users/danmc/Documents/GitHub/Dork/server/gameServer.tsx\",\"C:/Users/danmc/Documents/GitHub/Dork/server/..\\\\common\\\\clientPlayer.tsx\"],\"names\":[\"installedModules\",\"__webpack_require__\",\"moduleId\",\"exports\",\"module\",\"i\",\"l\",\"modules\",\"call\",\"m\",\"c\",\"d\",\"name\",\"getter\",\"o\",\"Object\",\"defineProperty\",\"enumerable\",\"get\",\"r\",\"Symbol\",\"toStringTag\",\"value\",\"t\",\"mode\",\"__esModule\",\"ns\",\"create\",\"key\",\"bind\",\"n\",\"object\",\"property\",\"prototype\",\"hasOwnProperty\",\"p\",\"s\",\"express\",\"http\",\"socketIO\",\"gameServer_1\",\"app\",\"server\",\"createServer\",\"io\",\"req\",\"res\",\"sendfile\",\"gameServer\",\"GameServer\",\"on\",\"socket\",\"connectToGame\",\"color\",\"console\",\"log\",\"sockets\",\"emit\",\"disconnect\",\"listen\",\"require\",\"PlayMode\",\"clientPlayer_1\",\"GameState\",\"this\",\"playmode\",\"NONE\",\"host\",\"master\",\"playerList\",\"setPlayMode\",\"addHost\",\"playerType\",\"PlayerType\",\"HOST\",\"WAITINGFORMASTER\",\"push\",\"addMaster\",\"MASTER\",\"WAITINGFORPLAYERS\",\"addPlayer\",\"player\",\"PLAYER\",\"addConnection\",\"client\",\"JSON\",\"stringify\",\"setOffline\",\"socketID\",\"iPlayer\",\"length\",\"connected\",\"getHost\",\"getMaster\",\"getClient\",\"attributes\",\"getClientByIP\",\"ipaddress\",\"Game\",\"gameState\",\"playerCount\",\"connect\",\"clientIp\",\"storedID\",\"storedPlayer\",\"connection\",\"sendCreateMessage\",\"ClientState\",\"getState\",\"playerID\",\"clientState\",\"data\",\"sendMessage\",\"refreshPlayerList\",\"game\",\"handshake\",\"query\",\"clientIP\",\"request\",\"remoteAddress\",\"id\",\"messageType\",\"to\",\"setPlayerType\"],\"mappings\":\"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\",\"sourcesContent\":[\" \\t// The module cache\\n \\tvar installedModules = {};\\n\\n \\t// The require function\\n \\tfunction __webpack_require__(moduleId) {\\n\\n \\t\\t// Check if module is in cache\\n \\t\\tif(installedModules[moduleId]) {\\n \\t\\t\\treturn installedModules[moduleId].exports;\\n \\t\\t}\\n \\t\\t// Create a new module (and put it into the cache)\\n \\t\\tvar module = installedModules[moduleId] = {\\n \\t\\t\\ti: moduleId,\\n \\t\\t\\tl: false,\\n \\t\\t\\texports: {}\\n \\t\\t};\\n\\n \\t\\t// Execute the module function\\n \\t\\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\\n\\n \\t\\t// Flag the module as loaded\\n \\t\\tmodule.l = true;\\n\\n \\t\\t// Return the exports of the module\\n \\t\\treturn module.exports;\\n \\t}\\n\\n\\n \\t// expose the modules object (__webpack_modules__)\\n \\t__webpack_require__.m = modules;\\n\\n \\t// expose the module cache\\n \\t__webpack_require__.c = installedModules;\\n\\n \\t// define getter function for harmony exports\\n \\t__webpack_require__.d = function(exports, name, getter) {\\n \\t\\tif(!__webpack_require__.o(exports, name)) {\\n \\t\\t\\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\\n \\t\\t}\\n \\t};\\n\\n \\t// define __esModule on exports\\n \\t__webpack_require__.r = function(exports) {\\n \\t\\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\\n \\t\\t\\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\\n \\t\\t}\\n \\t\\tObject.defineProperty(exports, '__esModule', { value: true });\\n \\t};\\n\\n \\t// create a fake namespace object\\n \\t// mode & 1: value is a module id, require it\\n \\t// mode & 2: merge all properties of value into the ns\\n \\t// mode & 4: return value when already ns object\\n \\t// mode & 8|1: behave like require\\n \\t__webpack_require__.t = function(value, mode) {\\n \\t\\tif(mode & 1) value = __webpack_require__(value);\\n \\t\\tif(mode & 8) return value;\\n \\t\\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\\n \\t\\tvar ns = Object.create(null);\\n \\t\\t__webpack_require__.r(ns);\\n \\t\\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\\n \\t\\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\\n \\t\\treturn ns;\\n \\t};\\n\\n \\t// getDefaultExport function for compatibility with non-harmony modules\\n \\t__webpack_require__.n = function(module) {\\n \\t\\tvar getter = module && module.__esModule ?\\n \\t\\t\\tfunction getDefault() { return module['default']; } :\\n \\t\\t\\tfunction getModuleExports() { return module; };\\n \\t\\t__webpack_require__.d(getter, 'a', getter);\\n \\t\\treturn getter;\\n \\t};\\n\\n \\t// Object.prototype.hasOwnProperty.call\\n \\t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\\n\\n \\t// __webpack_public_path__\\n \\t__webpack_require__.p = \\\"\\\";\\n\\n\\n \\t// Load entry module and return exports\\n \\treturn __webpack_require__(__webpack_require__.s = 0);\\n\",\"const express = require('express')\\r\\nconst http = require('http')\\r\\nconst socketIO = require('socket.io')\\r\\n//const login = require('./login.js');\\r\\nimport { GameServer } from \\\"./gameServer\\\"\\r\\n\\r\\n// our localhost port\\r\\nconst port = 4001\\r\\n\\r\\nconst app = express()\\r\\n\\r\\n// our server instance\\r\\nconst server = http.createServer(app)\\r\\n\\r\\n// This creates our socket using the instance of the server\\r\\nconst io = socketIO(server)\\r\\n\\r\\napp.get('*', function(req, res) {\\r\\n  res.sendfile('./public/index.html');\\r\\n});\\r\\n\\r\\nconst gameServer = new GameServer(io);\\r\\n\\r\\n// This is what the socket.io syntax is like, we will work this later\\r\\nio.on('connection', socket => \\r\\n{\\r\\n  gameServer.connectToGame(socket);\\r\\n\\r\\n  // just like on the client side, we have a socket.on method that takes a callback function\\r\\n  socket.on('change color', (color) => {\\r\\n    // once we get a 'change color' event from one of our clients, we will send it to the rest of the clients\\r\\n    // we make use of the socket.emit method again with the argument given to use from the callback function above\\r\\n    console.log('Color Changed to: ', color)\\r\\n    io.sockets.emit('change color', color)\\r\\n  })\\r\\n  \\r\\n  // disconnect is fired when a client leaves the server\\r\\n  socket.on('disconnect', () => {\\r\\n    console.log('user disconnected')\\r\\n    gameServer.disconnect(socket);\\r\\n  })\\r\\n})\\r\\n\\r\\nserver.listen(port, () => console.log(`Listening on port ${port}`))\\r\\n\\r\\n\",\"module.exports = require(\\\"express\\\");\",\"module.exports = require(\\\"http\\\");\",\"module.exports = require(\\\"socket.io\\\");\",\"import { ClientState, PlayerType  } from \\\"../common/clientPlayer\\\";\\r\\n\\r\\nenum PlayMode\\r\\n{\\r\\n  NONE = \\\"NONE\\\",\\r\\n  WAITINGFORMASTER = \\\"WAITINGFORMASTER\\\",\\r\\n  WAITINGFORPLAYERS = \\\"WAITINGFORPLAYERS\\\",\\r\\n  READY = \\\"READY\\\",\\r\\n  INGAME = \\\"INGAME\\\",\\r\\n}\\r\\n\\r\\nclass GameState\\r\\n{\\r\\n    playmode: PlayMode;\\r\\n    host: ClientState;\\r\\n    master: ClientState;\\r\\n    playerList: Array<ClientState>;\\r\\n\\r\\n    constructor()\\r\\n    {\\r\\n        this.playmode = PlayMode.NONE,\\r\\n        this.host = null,\\r\\n        this.master = null,\\r\\n        this.playerList = []\\r\\n    }\\r\\n\\r\\n    setPlayMode(playmode)\\r\\n    {\\r\\n        this.playmode = playmode;\\r\\n        console.log('New Playmode ' + this.playmode);\\r\\n    }\\r\\n\\r\\n    addHost(host)\\r\\n    {\\r\\n        console.log('Add Host');\\r\\n        host.playerType = PlayerType.HOST;\\r\\n        this.host = host;\\r\\n        this.setPlayMode(PlayMode.WAITINGFORMASTER);\\r\\n        this.playerList.push(host);\\r\\n    }\\r\\n\\r\\n    addMaster(master)\\r\\n    {\\r\\n        console.log('Add Master');\\r\\n        master.playerType = PlayerType.MASTER;\\r\\n        this.master = master;\\r\\n        this.setPlayMode(PlayMode.WAITINGFORPLAYERS);\\r\\n        this.playerList.push(master);\\r\\n    }\\r\\n\\r\\n    addPlayer(player)\\r\\n    {\\r\\n        console.log('Add Player');\\r\\n        player.playerType = PlayerType.PLAYER;\\r\\n        this.playerList.push(player);\\r\\n    }\\r\\n\\r\\n    addConnection(client)\\r\\n    {\\r\\n        console.log('Add Connection ' + JSON.stringify(client, null, 4));\\r\\n\\r\\n        if(this.playmode == PlayMode.NONE)\\r\\n            this.addHost(client);\\r\\n        else if(this.playmode == PlayMode.WAITINGFORMASTER)\\r\\n            this.addMaster(client);\\r\\n        else if(this.playmode == PlayMode.WAITINGFORPLAYERS)\\r\\n            this.addPlayer(client);\\r\\n    }\\r\\n\\r\\n    setOffline(socketID)\\r\\n    {\\r\\n        console.log(\\\"set offline - \\\" + socketID);\\r\\n\\r\\n        var iPlayer;\\r\\n        for (iPlayer = 0; iPlayer < this.playerList.length; iPlayer++) \\r\\n        {  \\r\\n            var clientState = this.playerList[iPlayer];\\r\\n            if(clientState.socketID === socketID)\\r\\n                this.playerList[iPlayer].connected = false;\\r\\n        }\\r\\n    }\\r\\n\\r\\n    getHost()\\r\\n    {\\r\\n        return this.host;\\r\\n    }\\r\\n\\r\\n    getMaster()\\r\\n    {\\r\\n        return this.master;\\r\\n    }\\r\\n\\r\\n    getClient(socketID)\\r\\n    {\\r\\n        var iPlayer;\\r\\n        for (iPlayer = 0; iPlayer < this.playerList.length; iPlayer++) \\r\\n        {  \\r\\n            console.log(\\\"ID To Find - \\\" + socketID);\\r\\n\\r\\n            var attributes = this.playerList[iPlayer];\\r\\n            console.log(\\\"PLAYER [\\\" + iPlayer + \\\"] \\\\n\\\" + JSON.stringify(attributes));\\r\\n            if(attributes.socketID === socketID)\\r\\n                return this.playerList[iPlayer];\\r\\n        }\\r\\n\\r\\n        return null;\\r\\n    }\\r\\n\\r\\n    getClientByIP(ipaddress)\\r\\n    {\\r\\n        var iPlayer;\\r\\n        for (iPlayer = 0; iPlayer < this.playerList.length; iPlayer++) \\r\\n        {  \\r\\n            console.log(\\\"IPAddress To Find - \\\" + ipaddress);\\r\\n\\r\\n            var attributes = this.playerList[iPlayer];\\r\\n            console.log(\\\"PLAYER [\\\" + iPlayer + \\\"] \\\\n\\\" + JSON.stringify(attributes));\\r\\n            if(attributes.ipaddress === ipaddress)\\r\\n            {\\r\\n                return this.playerList[iPlayer];\\r\\n            }\\r\\n        }\\r\\n\\r\\n        return null;\\r\\n    }\\r\\n}\\r\\n\\r\\nclass Game\\r\\n{\\r\\n    gameServer: GameServer;\\r\\n    gameState: GameState;\\r\\n    playerCount: Number;\\r\\n\\r\\n    constructor(gameServer) {\\r\\n        this.gameServer = gameServer;\\r\\n        this.gameState = new GameState();\\r\\n        console.log('GameCreated ' + JSON.stringify(this.gameState, null, 4));\\r\\n\\r\\n        this.playerCount = 0;\\r\\n        //this.playerRefreshTimer = setTimeout(this.refreshPlayerList, 4000);\\r\\n    }\\r\\n\\r\\n    connect(socketID, clientIp, storedID, storedPlayer)\\r\\n    {\\r\\n        var client = null;\\r\\n\\r\\n        if(storedID !== null)\\r\\n            client = this.getClient(storedID);\\r\\n\\r\\n        if(client === null || client.connection == true)\\r\\n            client = this.getClientByIP(clientIp);\\r\\n\\r\\n        // Attempt to reconnect\\r\\n        if(client !== null)\\r\\n        {\\r\\n            // Check this client matches the details we have stored\\r\\n            if(client.connection === false && (storedPlayer === null || client.playerType === storedPlayer))\\r\\n            {\\r\\n                // Update the client state\\r\\n                client.socketID = socketID;\\r\\n                client.ipaddress = clientIp;\\r\\n                client.connection = true;\\r\\n\\r\\n                this.sendCreateMessage(client);\\r\\n            }\\r\\n            else\\r\\n            {\\r\\n                client = null;\\r\\n            }\\r\\n        }\\r\\n\\r\\n        if(client === null)\\r\\n        {\\r\\n            // Create a new connection\\r\\n            this.addConnection(socketID, clientIp);\\r\\n        }\\r\\n\\r\\n        return client;\\r\\n    }\\r\\n\\r\\n    disconnect(socketID)\\r\\n    {\\r\\n        this.gameState.setOffline(socketID);\\r\\n    }\\r\\n\\r\\n    addConnection(socketID, ipaddress)\\r\\n    {\\r\\n        var client = new ClientState(socketID, ipaddress);\\r\\n        this.gameState.addConnection(client);\\r\\n\\r\\n        this.sendCreateMessage(client);\\r\\n\\r\\n        return client;\\r\\n    }\\r\\n\\r\\n    getState()\\r\\n    {\\r\\n        return this.gameState;\\r\\n    }\\r\\n\\r\\n    getHost()\\r\\n    {\\r\\n        return this.getState().getHost();\\r\\n    }\\r\\n\\r\\n    getMaster()\\r\\n    {\\r\\n        return this.getState().getMaster();\\r\\n    }\\r\\n\\r\\n    getClient(playerID)\\r\\n    {\\r\\n        return this.getState().getClient(playerID);\\r\\n    }\\r\\n\\r\\n    getClientByIP(ipaddress)\\r\\n    {\\r\\n        return this.getState().getClientByIP(ipaddress);\\r\\n    }\\r\\n\\r\\n    sendCreateMessage(clientState)\\r\\n    {\\r\\n        var data = { clientState: clientState };\\r\\n        this.gameServer.sendMessage(clientState, 'create', data);\\r\\n    }\\r\\n\\r\\n    refreshPlayerList()\\r\\n    {\\r\\n        var host = this.getState().getHost();\\r\\n        if(this.gameState == null || host == null)\\r\\n            return;\\r\\n            \\r\\n        var playerList = this.gameState.playerList;\\r\\n\\r\\n        if(playerList == null)\\r\\n            return;\\r\\n\\r\\n        var newPlayerCount = playerList.length;\\r\\n\\r\\n        if(newPlayerCount != this.playerCount)\\r\\n        {\\r\\n            var data = { playerList: playerList };\\r\\n            this.gameServer.sendMessage(host, 'refreshPlayers', data);\\r\\n        }\\r\\n    }\\r\\n}\\r\\n\\r\\nexport class GameServer \\r\\n{\\r\\n    io: any;\\r\\n    game: Game;\\r\\n\\r\\n    constructor(io) {\\r\\n      this.io = io;\\r\\n      this.game = new Game(this);\\r\\n    }\\r\\n  \\r\\n    connectToGame(socket)\\r\\n    {\\r\\n        var storedID = socket.handshake.query['UUID'];\\r\\n        var storedPlayer = socket.handshake.query['playerType'];\\r\\n\\r\\n        var client = null;\\r\\n        var clientIP = socket.request.connection.remoteAddress;\\r\\n\\r\\n        client = this.game.connect(socket.id, clientIP, storedID, storedPlayer);\\r\\n    }\\r\\n\\r\\n    disconnect(socket)\\r\\n    {\\r\\n        this.game.disconnect(socket.id);\\r\\n    }\\r\\n\\r\\n    sendMessage(clientState, messageType, data)\\r\\n    {\\r\\n        console.log(\\\"Sending Msg - \\\" + clientState.playerType + \\\" - \\\" + messageType);\\r\\n\\r\\n        data.messageType = messageType;\\r\\n\\r\\n        if(clientState != null)\\r\\n            this.io.to(`${clientState.socketID}`).emit(messageType, data);\\r\\n    }\\r\\n}\",\"export enum PlayerType \\r\\n{\\r\\n  NONE = \\\"NONE\\\",\\r\\n  PLAYER = \\\"PLAYER\\\",\\r\\n  MASTER = \\\"MASTER\\\",\\r\\n  HOST = \\\"HOST\\\"\\r\\n};\\r\\n\\r\\nexport class ClientState {\\r\\n    \\r\\n    socketID: SocketIOClient.Socket;\\r\\n    ipaddress: string;\\r\\n    connected: boolean;\\r\\n    playerType: PlayerType;\\r\\n\\r\\n    constructor(socketID, ipaddress) {\\r\\n        this.socketID = socketID;\\r\\n        this.ipaddress = ipaddress;\\r\\n        this.connected = true;\\r\\n        this.playerType = PlayerType.NONE;\\r\\n      }\\r\\n\\r\\n      setPlayerType(playerType)\\r\\n      {\\r\\n        this.playerType = playerType;\\r\\n      }\\r\\n}\\r\\n\\r\\n\"]}","code":"!function(e){var t={};function n(o){if(t[o])return t[o].exports;var r=t[o]={i:o,l:!1,exports:{}};return e[o].call(r.exports,r,r.exports,n),r.l=!0,r.exports}n.m=e,n.c=t,n.d=function(e,t,o){n.o(e,t)||Object.defineProperty(e,t,{enumerable:!0,get:o})},n.r=function(e){\"undefined\"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:\"Module\"}),Object.defineProperty(e,\"__esModule\",{value:!0})},n.t=function(e,t){if(1&t&&(e=n(e)),8&t)return e;if(4&t&&\"object\"==typeof e&&e&&e.__esModule)return e;var o=Object.create(null);if(n.r(o),Object.defineProperty(o,\"default\",{enumerable:!0,value:e}),2&t&&\"string\"!=typeof e)for(var r in e)n.d(o,r,function(t){return e[t]}.bind(null,r));return o},n.n=function(e){var t=e&&e.__esModule?function(){return e.default}:function(){return e};return n.d(t,\"a\",t),t},n.o=function(e,t){return Object.prototype.hasOwnProperty.call(e,t)},n.p=\"\",n(n.s=0)}([function(e,t,n){\"use strict\";Object.defineProperty(t,\"__esModule\",{value:!0});var o=n(1),r=n(2),i=n(3),s=n(4),l=o(),a=r.createServer(l),c=i(a);l.get(\"*\",function(e,t){t.sendfile(\"./public/index.html\")});var u=new s.GameServer(c);c.on(\"connection\",function(e){u.connectToGame(e),e.on(\"change color\",function(e){console.log(\"Color Changed to: \",e),c.sockets.emit(\"change color\",e)}),e.on(\"disconnect\",function(){console.log(\"user disconnected\"),u.disconnect(e)})}),a.listen(4001,function(){return console.log(\"Listening on port 4001\")})},function(e,t){e.exports=require(\"express\")},function(e,t){e.exports=require(\"http\")},function(e,t){e.exports=require(\"socket.io\")},function(e,t,n){\"use strict\";Object.defineProperty(t,\"__esModule\",{value:!0});var o,r=n(5);!function(e){e.NONE=\"NONE\",e.WAITINGFORMASTER=\"WAITINGFORMASTER\",e.WAITINGFORPLAYERS=\"WAITINGFORPLAYERS\",e.READY=\"READY\",e.INGAME=\"INGAME\"}(o||(o={}));var i=function(){function e(){this.playmode=o.NONE,this.host=null,this.master=null,this.playerList=[]}return e.prototype.setPlayMode=function(e){this.playmode=e,console.log(\"New Playmode \"+this.playmode)},e.prototype.addHost=function(e){console.log(\"Add Host\"),e.playerType=r.PlayerType.HOST,this.host=e,this.setPlayMode(o.WAITINGFORMASTER),this.playerList.push(e)},e.prototype.addMaster=function(e){console.log(\"Add Master\"),e.playerType=r.PlayerType.MASTER,this.master=e,this.setPlayMode(o.WAITINGFORPLAYERS),this.playerList.push(e)},e.prototype.addPlayer=function(e){console.log(\"Add Player\"),e.playerType=r.PlayerType.PLAYER,this.playerList.push(e)},e.prototype.addConnection=function(e){console.log(\"Add Connection \"+JSON.stringify(e,null,4)),this.playmode==o.NONE?this.addHost(e):this.playmode==o.WAITINGFORMASTER?this.addMaster(e):this.playmode==o.WAITINGFORPLAYERS&&this.addPlayer(e)},e.prototype.setOffline=function(e){var t;for(console.log(\"set offline - \"+e),t=0;t<this.playerList.length;t++){this.playerList[t].socketID===e&&(this.playerList[t].connected=!1)}},e.prototype.getHost=function(){return this.host},e.prototype.getMaster=function(){return this.master},e.prototype.getClient=function(e){var t;for(t=0;t<this.playerList.length;t++){console.log(\"ID To Find - \"+e);var n=this.playerList[t];if(console.log(\"PLAYER [\"+t+\"] \\n\"+JSON.stringify(n)),n.socketID===e)return this.playerList[t]}return null},e.prototype.getClientByIP=function(e){var t;for(t=0;t<this.playerList.length;t++){console.log(\"IPAddress To Find - \"+e);var n=this.playerList[t];if(console.log(\"PLAYER [\"+t+\"] \\n\"+JSON.stringify(n)),n.ipaddress===e)return this.playerList[t]}return null},e}(),s=function(){function e(e){this.gameServer=e,this.gameState=new i,console.log(\"GameCreated \"+JSON.stringify(this.gameState,null,4)),this.playerCount=0}return e.prototype.connect=function(e,t,n,o){var r=null;return null!==n&&(r=this.getClient(n)),null!==r&&1!=r.connection||(r=this.getClientByIP(t)),null!==r&&(!1!==r.connection||null!==o&&r.playerType!==o?r=null:(r.socketID=e,r.ipaddress=t,r.connection=!0,this.sendCreateMessage(r))),null===r&&this.addConnection(e,t),r},e.prototype.disconnect=function(e){this.gameState.setOffline(e)},e.prototype.addConnection=function(e,t){var n=new r.ClientState(e,t);return this.gameState.addConnection(n),this.sendCreateMessage(n),n},e.prototype.getState=function(){return this.gameState},e.prototype.getHost=function(){return this.getState().getHost()},e.prototype.getMaster=function(){return this.getState().getMaster()},e.prototype.getClient=function(e){return this.getState().getClient(e)},e.prototype.getClientByIP=function(e){return this.getState().getClientByIP(e)},e.prototype.sendCreateMessage=function(e){var t={clientState:e};this.gameServer.sendMessage(e,\"create\",t)},e.prototype.refreshPlayerList=function(){var e=this.getState().getHost();if(null!=this.gameState&&null!=e){var t=this.gameState.playerList;if(null!=t)if(t.length!=this.playerCount){var n={playerList:t};this.gameServer.sendMessage(e,\"refreshPlayers\",n)}}},e}(),l=function(){function e(e){this.io=e,this.game=new s(this)}return e.prototype.connectToGame=function(e){var t=e.handshake.query.UUID,n=e.handshake.query.playerType,o=e.request.connection.remoteAddress;this.game.connect(e.id,o,t,n)},e.prototype.disconnect=function(e){this.game.disconnect(e.id)},e.prototype.sendMessage=function(e,t,n){console.log(\"Sending Msg - \"+e.playerType+\" - \"+t),n.messageType=t,null!=e&&this.io.to(\"\"+e.socketID).emit(t,n)},e}();t.GameServer=l},function(e,t,n){\"use strict\";var o;Object.defineProperty(t,\"__esModule\",{value:!0}),function(e){e.NONE=\"NONE\",e.PLAYER=\"PLAYER\",e.MASTER=\"MASTER\",e.HOST=\"HOST\"}(o=t.PlayerType||(t.PlayerType={}));var r=function(){function e(e,t){this.socketID=e,this.ipaddress=t,this.connected=!0,this.playerType=o.NONE}return e.prototype.setPlayerType=function(e){this.playerType=e},e}();t.ClientState=r}]);","extractedComments":[]}