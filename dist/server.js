!function(e){var t={};function s(n){if(t[n])return t[n].exports;var r=t[n]={i:n,l:!1,exports:{}};return e[n].call(r.exports,r,r.exports,s),r.l=!0,r.exports}s.m=e,s.c=t,s.d=function(e,t,n){s.o(e,t)||Object.defineProperty(e,t,{enumerable:!0,get:n})},s.r=function(e){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})},s.t=function(e,t){if(1&t&&(e=s(e)),8&t)return e;if(4&t&&"object"==typeof e&&e&&e.__esModule)return e;var n=Object.create(null);if(s.r(n),Object.defineProperty(n,"default",{enumerable:!0,value:e}),2&t&&"string"!=typeof e)for(var r in e)s.d(n,r,function(t){return e[t]}.bind(null,r));return n},s.n=function(e){var t=e&&e.__esModule?function(){return e.default}:function(){return e};return s.d(t,"a",t),t},s.o=function(e,t){return Object.prototype.hasOwnProperty.call(e,t)},s.p="",s(s.s=0)}([function(e,t,s){const n=s(1),r=s(2),o=s(3),i=s(4),a=n(),l=r.createServer(a),c=o(l);a.get("*",function(e,t){t.sendfile("./public/index.html")});const u=new i(c);c.on("connection",e=>{u.connectToGame(e),e.on("change color",e=>{console.log("Color Changed to: ",e),c.sockets.emit("change color",e)}),e.on("disconnect",()=>{console.log("user disconnected")})}),l.listen(4001,()=>console.log("Listening on port 4001"))},function(e,t){e.exports=require("express")},function(e,t){e.exports=require("http")},function(e,t){e.exports=require("socket.io")},function(e,t,s){s(5);var{ClientState:n,PlayerType:r}=s(6);const o={NONE:"NONE",WAITINGFORMASTER:"WAITINGFORMASTER",WAITINGFORPLAYERS:"WAITINGFORPLAYERS",READY:"READY",INGAME:"INGAME"};class i{constructor(){this.playmode=o.NONE,this.host=null,this.master=null,this.playerList=[]}setPlayMode(e){this.playmode=e,console.log("New Playmode "+this.playmode)}addHost(e){console.log("Add Host"),e.playerType=r.HOST,this.host=e,this.setPlayMode(o.WAITINGFORMASTER),this.playerList.push(e)}addMaster(e){console.log("Add Master"),e.playerType=r.MASTER,this.master=e,this.setPlayMode(o.WAITINGFORPLAYERS),this.playerList.push(e)}addPlayer(e){console.log("Add Player"),e.playerType=r.PLAYER,this.playerList.push(e)}addConnection(e){console.log("Add Connection "+JSON.stringify(e,null,4)),this.playmode==o.NONE?this.addHost(e):this.playmode==o.WAITINGFORMASTER?this.addMaster(e):this.playmode==o.WAITINGFORPLAYERS&&this.addPlayer(e)}getHost(){return this.host}getMaster(){return this.master}getClient(e){var t;for(t=0;t<this.playerList.length;t++){console.log("ID To Find - "+e);var s=this.playerList[t];if(console.log("PLAYER ["+t+"] \n"+JSON.stringify(s)),s.playerID===e)return this.playerList[t]}return null}getClientByIP(e){var t,s=-1;for(t=0;t<this.playerList.length;t++){console.log("IPAddress To Find - "+e);var n=this.playerList[t];if(console.log("PLAYER ["+t+"] \n"+JSON.stringify(n)),n.ipaddress===e){if(-1!==s){console.log("Multiple Users Sharing IP");break}s=t}}return-1!==s?this.playerList[s]:null}}class a{constructor(e){this.gameServer=e,this.gameState=new i,console.log("GameCreated "+JSON.stringify(this.gameState,null,4)),this.playerCount=0,this.playerRefreshTimer=setTimeout(this.refreshPlayerList,4e3)}connect(e,t,s,n){var r=null;return null!==s&&(r=this.getClient(s)),null===r&&(r=this.getClientByIP(t)),null!==r&&(!1!==r.connection||null!==n&&r.playerType!==n?r=null:(r.socketID=e,r.ipaddress=ipaddress,r.connection=!0,this.sendCreateMessage(r))),null===r&&this.addConnection(e,t),r}addConnection(e,t){var s=new n(e,t);return this.gameState.addConnection(s),this.sendCreateMessage(s),s}getState(){return this.gameState}getHost(){return this.getState().getHost()}getMaster(){return this.getState().getMaster()}getClient(e){return this.getState().getClient(e)}getClientByIP(e){return this.getState().getClientByIP(e)}sendCreateMessage(e){var t={clientState:e};this.gameServer.sendMessage(e,"create",t)}refreshPlayerList(){var e=this.getState().getHost();if(null!=this.gameState&&null!=e){var t=this.gameState.playerList;if(null!=t)if(t.length!=this.playerCount){var s={playerList:t};this.gameServer.sendMessage(e,"refreshPlayers",s)}}}}e.exports=class{constructor(e){this.io=e,this.game=new a(this)}connectToGame(e){var t=e.handshake.query.UUID,s=e.handshake.query.playerType,n=e.request.connection.remoteAddress;this.game.connect(e.id,n,t,s)}sendMessage(e,t,s){console.log("Sending Msg - "+e.playerType+" - "+t),s.messageType=t,null!=e&&this.io.to(`${e.socketID}`).emit(t,s)}}},function(e,t){e.exports=require("fs")},function(e,t,s){"use strict";s.r(t),s.d(t,"PlayerType",function(){return n}),s.d(t,"ClientState",function(){return r}),s.d(t,"GameClient",function(){return o}),s.d(t,"GamePlayer",function(){return i}),s.d(t,"GameMaster",function(){return a}),s.d(t,"GameHost",function(){return l});const n={NONE:"NONE",PLAYER:"PLAYER",MASTER:"MASTER",HOST:"HOST"};class r{constructor(e,t){this.socketID=e,this.ipaddress=t,this.connected=!0,this.playerType=n.NONE}setPlayerType(e){this.playerType=e}}class o{constructor(e){this.clientState=e}handleMessage(e){switch(console.log("Message recieved - "+JSON.stringify(e)),e.messageType){case"create":this.messageCreate(e)}}messageCreate(e){this.clientState=e.clientState}updateState(e){this.clientState=e}}class i extends o{constructor(e){super(e)}}class a extends o{constructor(e){super(e)}}class l extends o{constructor(e){super(e),this.playerList=null}handleMessage(e){switch(console.log("Host Message recieved - "+JSON.stringify(e)),e.messageType){case"refreshPlayers":this.refreshPlayers(e);break;default:super.handleMessage(e)}}refreshPlayers(e){console.log("New Player List - "+JSON.stringify(e)),null!=e&&null!=e.playerList&&(this.playerList=e.playerList)}}}]);
//# sourceMappingURL=server.js.map